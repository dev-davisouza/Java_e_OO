/*
No README, vc entendeu o m√≠nimo do Java, agora iremos entrar na linguagem junto com a OO. 

nota: sempre que eu usar o termo OO; saiba que significa: Orienta√ß√£o a objetos.

Se vc √© programou uma √∫nica vez na vida, provavelmente sabe o que √© um "Hello World" (significa literalmente: "Ol√° mundo"),
caso n√£o saiba, vai saber :D, confia.

Em java, para exibir essa mensagem seria mais ou menos assim ‚Üì‚Üì‚Üì‚Üì. 
*/
System.out.print("Hello World");

/*
Explicando o c√≥digo acima:

System - √â uma classe padr√£o do java que oferece os fluxos de entrada padr√£o, sa√≠da padr√£o, e sa√≠da de erro da linguagem. Voc√™ n√£o precisa entender
         isso inicialmente, apenas entenda o funcionamento, mais pra frente, abordarei o conceito de Classes.
         
out - M√©todo de sa√≠da padr√£o da classe System. Tamb√©m entenderemos o que √© um m√©todo mais √† frente.

print() - m√©todo de exibi√ß√£o de valores; h√° outras varia√ß√µes desse m√©todo: println, prinf, explicarei-as depois.

E por fim, o bendito ";" no final de toda instru√ß√£o java √© necess√°rio coloc√°-lo, pois isso indica o fim da instru√ß√£o, caso n√£o seja colocado, resultar√° em
erro de compila√ß√£o.

Apesar de tudo, mesmo que vc copie o trecho de c√≥digo acima, ainda sim dar√° erro, java √© uma linguagem burocr√°tica, para que isso desse certo teria que ser
algo assim ‚Üì‚Üì
*/
Public class Basico {
  public static void main (String[] args) {
    System.out.print("Hello World");
  }
}

/*
Explicando o c√≥digo acima:

Temos a nossa clase, denominada "Basico" 

Bateu pregui√ßa depois eu volto aqui;

ADM a mimir........üò¥
*/
