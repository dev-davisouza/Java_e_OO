/*
No README, vc entendeu o m√≠nimo do Java, agora iremos entrar na linguagem junto com a OO. 

nota: sempre que eu usar o termo OO; saiba que significa: Orienta√ß√£o a objetos.

Se vc √© programou uma √∫nica vez na vida, provavelmente sabe o que √© um "Hello World" (significa literalmente: "Ol√° mundo"),
caso n√£o saiba, vai saber :D, confia.

Em java, para exibir essa mensagem seria mais ou menos assim ‚Üì‚Üì‚Üì‚Üì. 
*/
System.out.print("Hello World");

/*
‚Ä¢Explicando o c√≥digo acima:

System - √â uma classe padr√£o do java que oferece os fluxos de entrada padr√£o, sa√≠da padr√£o, e sa√≠da de erro da linguagem. Voc√™ n√£o precisa entender
         isso inicialmente, apenas entenda o funcionamento, mais pra frente, abordarei o conceito de Classes.
         
out - M√©todo de sa√≠da padr√£o da classe System. Tamb√©m entenderemos o que √© um m√©todo mais √† frente.

print() - m√©todo de exibi√ß√£o de valores; h√° outras varia√ß√µes desse m√©todo: println, prinf, explicarei-as depois.

E por fim, o bendito ";" no final de toda instru√ß√£o java √© necess√°rio coloc√°-lo, pois isso indica o fim da instru√ß√£o, caso n√£o seja colocado, resultar√° em
erro de compila√ß√£o.

Apesar de tudo, mesmo que vc copie o trecho de c√≥digo acima, ainda sim dar√° erro, java √© uma linguagem burocr√°tica, para que isso desse certo teria que 
ser algo assim ‚Üì‚Üì
*/
Public class Basico {
  public static void main (String[] args) {
    System.out.print("Hello World");
  }
}

/*
‚Ä¢Explicando o c√≥digo acima:

Temos a nossa clase denominada "Basico", por ela ser uma classe, ent√£o colocamos a palavra reservada do Java "class", antes do nome, e o modificador de
acesso, o "Public", esse modificador de acesso permite que eu consiga ter acesso aos atributos de uma classe p√∫blica, de outra classe distinta,
sem restri√ß√£o, h√° outros modificadores de acesso: private e protect, mais pra frente veremos isso.

‚Ä¢Chegamos agora a uma parte fundamental; como rodar programas java?

√© preciso instalar o JDK(Java Development kit), e o JRE(Java Runtime Enviroment). O JDK √© o kit de ferramentas que oferece um ambiente para desenvolver
aplica√ß√µes Java, e o JRE, simplesmente roda esses programas relacionados ao java em suas diferentes exten√ß√µes: .java, .class, .jar. N√£o entrarei em
detalhes sobre a instala√ß√£o de ambos, mas disponibilizarei um link para a instala√ß√£o.

- https://www.oracle.com/java/technologies/downloads/ (<-- Download do JRE e JDK no site ofical da Oracle.)

‚Ä¢Rodando uma aplica√ß√£o:

Ap√≥s a instala√ß√£o dos programas citados acima, √© necess√°rio verificar se o compilador do java est√° dispon√≠vel e pronto para uso, como meu sistema √© o
Linux mint XFCE, ent√£o alguns comandos podem n√£o funcionar em outras plataformas, nesse caso, pesquise sobre e descubra sozinho, focarei aqui apenas no
Java propiamente dito.

nota: caso voc√™ nunca tenha nenhuma aplica√ß√£o .java para rodar, baixe esse arquivo de um programa que eu mesmo criei no link:
      - https://github.com/dev-davisouza/SimpleChattyBot/archive/refs/heads/main.zip

- Abra um terminal e digite: javac; caso n√£o retorne erros, podemos prosseguir, caso contr√°rio, procure uma solu√ß√£o na internet.
- 





Bateu pregui√ßa depois eu volto aqui;

ADM a mimir........üò¥
*/
